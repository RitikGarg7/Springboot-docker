events {
    worker_connections 1024;
}

http {

    upstream backend_servers {
        server springboot-app:8081;  # First Spring Boot instance
        server springboot-app:8081;  # Second Spring Boot instance
    }
    log_format upstream_log '[$time_local] "$request" -> backend: $upstream_addr';
    access_log /var/log/nginx/access.log upstream_log;

    server {
        listen 80;

        # Serve static files
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        # Reverse Proxy to Spring Boot Backend
        location /api/ {
#             resolver 127.0.0.11 valid=30s;
#             set $backend http://springboot-app:8081;
#             proxy_pass $backend;
#             proxy_pass http://springboot-app:8081/;  # Match the backend container name in Docker
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
