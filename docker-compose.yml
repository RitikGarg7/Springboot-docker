version: '3.8'

services:
  springboot-app:
    #    image: ritik7garg/springboot-app:latest # Pulling the Spring Boot app from Docker Hub
    image: spring-rest-application
    build:
      context: .
      dockerfile: ./Dockerfile
#    container_name: springboot-container
    deploy:
      replicas: 2
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#    ports:
#      - "8081:8081"  # Exposing port 8081 of the Spring Boot app
    depends_on:
      - mysql-db
    networks:
      - app-network

  frontend:
    image: frontend-application
    build:
      context: .
      dockerfile: ./frontend/Dockerfile  # Path to frontend Dockerfile
    container_name: frontend-container
    ports:
      - "80:80"  # Exposing port 80 for the UI
    depends_on:
      - springboot-app
    networks:
      - app-network


  mysql-db:
    image: mysql:8.0  # Using official MySQL image from Docker Hub
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: springbootdb
      MYSQL_USER: springuser
      MYSQL_PASSWORD: springpassword
    ports:
      - "3307:3306"  # Exposing port 3306 of MySQL database
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql  # Persisting MySQL data between container restarts
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script


networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
